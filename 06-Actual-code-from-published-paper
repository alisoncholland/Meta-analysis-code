
# Copyright Â© 2016, Alison C. Holland, All rights reserved. 

####################################################################################################
# Actual code from Facial mimicry, empathy, and emotion recognition: A meta-analysis of correlations
####################################################################################################


# data is loaded as dat1


# ---------------
# filter emp data
# ---------------

# select specific rows
dat_emp <- filter(dat1, Measure_emp_aq == "emp")


# -------------------------
# aggregate ES for FM x Emp
# -------------------------

# select specific columns
dat_emp_agg <- select(dat_emp, id, r, n)

# compute aggregated ES for each study
agg_emp <- agg(id, r, n, cor = .50, mod = NULL, data = dat_emp_agg)

# compute variance of correlation coef (r) and add variance column to data results
var_r_funcAggEmp <- var_r(agg_emp$r, agg_emp$n)
agg_emp$var_r <- var_r_funcAggEmp

# select columns Study and Year from original data
Study_Year_emp_all <- select(dat_emp, Study, Year)

# remove duplicate rows 
Study_Year_emp <- distinct(Study_Year_emp_all)

# merge columns Study and Year with aggregated data results
agg_emp_Results <- bind_cols(Study_Year_emp, agg_emp)


# -------------------
# Est ES for FM x Emp
# -------------------

# Random effects meta-regression

# compute est. summary effect
m0agg_emp <- mareg(r ~ 1, var = var_r, method = "REML", data = agg_emp)
summary(m0agg_emp)


# ------------------------------------
# Calculate heterogeneity for FM x Emp
# ------------------------------------

# Calculate I2
het_m0agg_emp <- confint(m0agg_emp, digist = 2)
het_m0agg_emp


# ------------------
# plots for FM x Emp
# ------------------

# forest plot for agg

# select specific columns
agg_emp_forest <- select(agg_emp_Results, Study, Year, r, n, var_r)

# plot forest plot
forestPlot_emp_data <- rma(yi = r, vi = var_r, data = agg_emp_forest)
forestPlot_emp <- forest(forestPlot_emp_data, slab = paste(agg_emp_forest$Study, agg_emp_forest$Year, sep = ", "), xlim = c(-2.25, 2.25), digits = c(2, 2), cex = 1.0) 

# add bold titles
par(cex = 1.3, font = 2) 
text(0, 25.5, "Forest plot of aggregated effect sizes per study", pos = 3)
par(cex = 1.3, font = 1) 
text(-2.25, 25, "Author(s) & Year", pos = 4)
text(2.25, 25, "Observed r [95% CI]", pos = 2)


# plot Baujat plot

# plot from agg ES
agg_emp_baujat <- rma(yi = r, vi = var_r, data = agg_emp)
par(cex = 1.3, font = 1)
baujat(agg_emp_baujat, xlim=c(0, 4), ylim = c(0, 0.4), main = "Baujat plot of aggregated effect sizes per study")


# plot Q-Q plot

# id outliers
par(cex = 1.3, font = 1)
qqnorm(agg_emp_baujat, label = "all")
qqnorm(agg_emp_baujat, label = "none")


# -----------------------------
# publication bias for FM x Emp
# -----------------------------

# plot funnel plot
par(cex = 1.3, font = 1)
funnel(m0agg_emp, main = "Funnel plot of aggregated effect sizes per study")

# test for asymmetry - rank test
ranktest(m0agg_emp)

# test for asymmetry - regression test (Egger's test) - rma for both mixed & random effects models - see metafor manual
agg_emp_egger <- rma( yi = r, vi = var_r, data = agg_emp)
regtest.rma(agg_emp_egger)


# -------------------------------
# Moderator analysis for FM x Emp
# -------------------------------

# calculate variance
var_r_func <- var_r(dat_emp$r,dat_emp$n)
dat_emp$var_r <- var_r_func


# Gender male vs. female
# ----------------------

# select specific values from data
dat_emp_gender_mf <- filter(dat_emp, Gender != "both")

# calculate number of studies with specific values
dat_emp %>% filter(Gender == "f") %>% distinct(id)
dat_emp %>% filter(Gender == "m") %>% distinct(id)

# concatenate values
gendermfTag <- levels(unique(dat_emp_gender_mf$Gender, incomparables = FALSE))
gendermfTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(gendermfTag))
{
  rma(yi = r, vi = var_r, data = dat_emp_gender_mf, subset = (Gender == gendermfTag[i]))
  columnName <- paste("gender_mf",gendermfTag[i], sep=".")
  dat_emp_gender_mf[columnName] <- ifelse(dat_emp_gender_mf$Gender == gendermfTag[i], 1, 0)
}

# est. separate effects
msep_gender_mf <- rma(yi = r, vi = var_r, mods = ~ factor(Gender) - 1, data = dat_emp_gender_mf)
msep_gender_mf

# test moderator
m_gender_mf <- rma(yi = r, vi = var_r, mods = ~ factor(Gender), data = dat_emp_gender_mf)
m_gender_mf


# Gender box plot

# filter data
dat_boxPlot_gender_all <- select(dat_emp, id, Study, Year, r, Gender)
dat_boxPlot_gender <- filter(dat_boxPlot_gender_all, Gender != "both")

# write to .csv
write.csv(dat_boxPlot_gender, "importData_boxplot_FMemp_Gender.csv")

# load data as boxPlot_gender

# plot basic box plot
plot(r ~ Gender, boxPlot_gender, xlab = "Gender")
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# high emp & low emp
anova(msep_gender_mf, L = c(1, -1))

# Gender line plot
plot(coef(msep_gender_mf)[1:2], type = "o", pch = 19, ylim = c(0, 0.2), xlab = "Gender", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("Female","Male"))
title("Estimated Average Effects based on the Additive Model")


# Muscle
# ------

# calculate number of studies with specific values
dat_emp %>% filter(Muscle == "CS") %>% distinct(id)
dat_emp %>% filter(Muscle == "LF") %>% distinct(id)
dat_emp %>% filter(Muscle == "LL") %>% distinct(id)
dat_emp %>% filter(Muscle == "MF") %>% distinct(id)
dat_emp %>% filter(Muscle == "OC") %>% distinct(id)
dat_emp %>% filter(Muscle == "ZM") %>% distinct(id)

# concatenate values
muscleTag <- levels(unique(dat_emp$Muscle, incomparables = FALSE))
muscleTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(muscleTag))
{
  rma(yi = r, vi = var_r, data = dat_emp, subset = (Muscle == muscleTag[i]))
  columnName <- paste("muscle",muscleTag[i], sep=".")
  dat_emp[columnName] <- ifelse(dat_emp$Muscle == muscleTag[i], 1, 0)
}

# est. separate effects
msep_muscle <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) -1, data = dat_emp)
msep_muscle

# test moderator
m_muscle <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle), data = dat_emp)
m_muscle


# Muscle box plot

# filter data
dat_boxPlot_muscle <- select(dat_emp, id, Study, Year, r, Muscle)

# write to .csv
write.csv(dat_boxPlot_muscle, "importData_boxPlot_FMemp_Muscle.csv")

# load data as boxPlot_muscle

# plot basic box plot
plot(r ~ Muscle, boxPlot_muscle)
plot(r ~ Muscle, boxPlot_muscle, col = rainbow(length(unique(boxPlot_muscle))))
plot(r ~ Muscle, boxPlot_muscle, col = c("powderblue", "mistyrose", "palegreen", "sandybrown"))
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# CS & LF
anova(msep_muscle, L = c(1, -1, 0, 0, 0))

# CS & LL
anova(msep_muscle, L = c(1, 0, -1, 0, 0))

# CS & OC
anova(msep_muscle, L = c(1, 0, 0, -1, 0))

# CS & ZM
anova(msep_muscle, L = c(1, 0, 0, 0, -1))

# LF & LL
anova(msep_muscle, L = c(0, 1, -1, 0, 0))

# LF & OC
anova(msep_muscle, L = c(0, 1, 0, -1, 0))

# LF & ZM
anova(msep_muscle, L = c(0, 1, 0, 0, -1))

# LL & OC
anova(msep_muscle, L = c(0, 0, 1, -1, 0))

# LL & ZM
anova(msep_muscle, L = c(0, 0, 1, 0, -1))

# OC & ZM
anova(msep_muscle, L = c(0, 0, 0, 1, -1))


# Muscle line plot
plot(coef(msep_muscle)[1:5], type = "o", pch = 19, ylim = c(-0.5, 0.5), xlab = "Muscle", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")

# label x-axis
axis(side = 1, at = 1:5, labels = c("CS","LF", "LL", "OC", "ZM"))

# for 2nd factor
lines(coef(res.a2)[1:3] + coef(res.a2)[4], type="o", pch=15, lty="dotted")

# add legend
legend("topright", legend=c("Test Administrator Blind", "Test Administrator Aware"), lty=c("solid", "dotted"), pch=c(19,15), inset=0.01)

# add title
title("Estimated Average Effects based on the Additive Model")


# Muscle - neg
# ------------

# select specific values from data
dat_emp_musc_neg <- filter(dat_emp, Muscle != "ZM")

# concatenate values
muscleTagNeg <- levels(unique(dat_emp_musc_neg$Muscle, incomparables = FALSE))
muscleTagNeg

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(muscleTagNeg))
{
  rma(yi = r, vi = var_r, data = dat_emp_musc_neg, subset = (Muscle == muscleTagNeg[i]))
  columnName <- paste("muscle",muscleTagNeg[i], sep=".")
  dat_emp_musc_neg[columnName] <- ifelse(dat_emp_musc_neg$Muscle == muscleTagNeg[i], 1, 0)
}

# est. separate effects
msep_muscle_neg <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) -1, data = dat_emp_musc_neg)
msep_muscle_neg

# test moderator
m_muscle_neg <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle), data = dat_emp_musc_neg)
m_muscle_neg


# Muscle box plot

# filter data
dat_boxPlot_muscle_neg <- select(dat_emp_musc_neg, id, Study, Year, r, Muscle)

# write to .csv
write.csv(dat_boxPlot_muscle_neg, "importData_boxPlot_FMemp_Muscle_neg.csv")

# load data as boxPlot_muscle_neg 

# plot basic box plot
plot(r ~ Muscle, boxPlot_muscle_neg)
plot(r ~ Muscle, boxPlot_muscle, col = rainbow(length(unique(boxPlot_muscle))))
plot(r ~ Muscle, boxPlot_muscle, col = c("powderblue", "mistyrose", "palegreen", "sandybrown"))
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# CS & LF
anova(msep_muscle_neg, L = c(1, -1, 0))

# CS & OC
anova(msep_muscle_neg, L = c(1, 0, -1))

# LF & OC
anova(msep_muscle_neg, L = c(0, 1, -1))


# Muscle line plot
plot(coef(msep_muscle_neg)[1:3], type = "o", pch = 19, ylim = c(0, 0.5), xlab = "Muscle", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")

# label x-axis
axis(side = 1, at = 1:3, labels = c("CS","LF","OC"))

# for 2nd factor
lines(coef(res.a2)[1:3] + coef(res.a2)[4], type="o", pch=15, lty="dotted")

# add legend
legend("topright", legend=c("Test Administrator Blind", "Test Administrator Aware"), lty=c("solid", "dotted"), pch=c(19,15), inset=0.01)

# add title
title("Estimated Average Effects based on the Additive Model")


# Emotion
# -------

# filter specific values from data
dat_emp_emo_wOutNeg <- filter(dat_emp, Emotion != "neg")

# calculate number of studies with specific values
dat_emp_emo_wOutNeg %>% filter(Emotion == "ang") %>% distinct(id)
dat_emp_emo_wOutNeg %>% filter(Emotion == "dis") %>% distinct(id)
dat_emp_emo_wOutNeg %>% filter(Emotion == "fea") %>% distinct(id)
dat_emp_emo_wOutNeg %>% filter(Emotion == "hap") %>% distinct(id)
dat_emp_emo_wOutNeg %>% filter(Emotion == "pai") %>% distinct(id)
dat_emp_emo_wOutNeg %>% filter(Emotion == "ple") %>% distinct(id)
dat_emp_emo_wOutNeg %>% filter(Emotion == "sad") %>% distinct(id)

# concatenate values
emotionTag <- levels(unique(dat_emp_emo_wOutNeg$Emotion, incomparables = FALSE))
emotionTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(emotionTag))
{
  rma(yi = r, vi = var_r, data = dat_emp_emo_wOutNeg, subset = (Emotion == emotionTag[i]))
  columnName <- paste("emotion",emotionTag[i], sep=".")
  dat_emp_emo_wOutNeg[columnName] <- ifelse(dat_emp_emo_wOutNeg$Emotion == emotionTag[i], 1, 0)
}

# est. separate effects
msep_emotion <- rma(yi = r, vi = var_r, mods = ~ factor(Emotion) -1, data = dat_emp_emo_wOutNeg)
msep_emotion

# test moderator
m_emotion <- rma(yi = r, vi = var_r, mods = ~ factor(Emotion), data = dat_emp_emo_wOutNeg)
m_emotion


# Emotion box plot

# filter data
dat_boxPlot_emotion <- select(dat_emp_emo_wOutNeg, id, Study, Year, r, Emotion)

# write to .csv
write.csv(dat_boxPlot_emotion, "importData_boxplot_FMemp_Emotion.csv")

# load data as boxPlot_emotion

# plot basic box plot
plot(r ~ Emotion, boxPlot_emotion, xlab = "Emotion")
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# ang & dis
anova(msep_emotion, L = c(1, -1, 0, 0, 0, 0, 0))

# ang & fea
anova(msep_emotion, L = c(1, 0, -1, 0, 0, 0, 0))

# ang & hap
anova(msep_emotion, L = c(1, 0, 0, -1, 0, 0, 0))

# ang & pai
anova(msep_emotion, L = c(1, 0, 0, 0, -1, 0, 0))

# ang & ple
anova(msep_emotion, L = c(1, 0, 0, 0, 0, -1, 0))

# ang & sad
anova(msep_emotion, L = c(1, 0, 0, 0, 0, 0, -1))


# dis & fea
anova(msep_emotion, L = c(0, 1, -1, 0, 0, 0, 0))

# dis & hap
anova(msep_emotion, L = c(0, 1, 0, -1, 0, 0, 0))

# dis & pai
anova(msep_emotion, L = c(0, 1, 0, 0, -1, 0, 0))

# dis & ple
anova(msep_emotion, L = c(0, 1, 0, 0, 0, -1, 0))

# dis & sad
anova(msep_emotion, L = c(0, 1, 0, 0, 0, 0, -1))


# fea & hap
anova(msep_emotion, L = c(0, 0, 1, -1, 0, 0, 0))

# fea & pai
anova(msep_emotion, L = c(0, 0, 1, 0, -1, 0, 0))

# fea & ple
anova(msep_emotion, L = c(0, 0, 1, 0, 0, -1, 0))

# fea & sad
anova(msep_emotion, L = c(0, 0, 1, 0, 0, 0, -1))


# hap & pai
anova(msep_emotion, L = c(0, 0, 0, 1, -1, 0, 0))

# hap & ple
anova(msep_emotion, L = c(0, 0, 0, 1, 0, -1, 0))

# hap & sad
anova(msep_emotion, L = c(0, 0, 0, 1, 0, 0, -1))


# pai & ple
anova(msep_emotion, L = c(0, 0, 0, 0, 1, -1, 0))

# pai & sad
anova(msep_emotion, L = c(0, 0, 0, 0, 1, 0, -1))


# ple & sad
anova(msep_emotion, L = c(0, 0, 0, 0, 0, 1, -1))


# Emotion line plot
plot(coef(msep_emotion)[1:7], type = "o", pch = 19, ylim = c(-0.1, 0.5), xlab = "Emotion", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:7, labels = c("Anger","Disgust","Fear", "Happiness", "Pain", "Pleasantness", "Sadness"))
title("Estimated Average Effects based on the Additive Model")


# Emotion - neg
# -------------

# select specific values from data
dat_emp_emo_neg <- filter(dat_emp_emo_wOutNeg, Emotion != "hap")

# concatenate values
emotionTag <- levels(unique(dat_emp_emo_neg$Emotion, incomparables = FALSE))
emotionTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(emotionTag))
{
  rma(yi = r, vi = var_r, data = dat_emp_emo_neg, subset = (Emotion == emotionTag[i]))
  columnName <- paste("emotion",emotionTag[i], sep=".")
  dat_emp_emo_neg[columnName] <- ifelse(dat_emp_emo_neg$Emotion == emotionTag[i], 1, 0)
}

# est. separate effects
msep_emotion_neg <- rma(yi = r, vi = var_r, mods = ~ factor(Emotion) -1, data = dat_emp_emo_neg)
msep_emotion_neg

# test moderator
m_emotion_neg <- rma(yi = r, vi = var_r, mods = ~ factor(Emotion), data = dat_emp_emo_neg)
m_emotion_neg


# Emotion box plot

# filter data
dat_boxPlot_emotion_neg <- select(dat_emp_emo_neg, id, Study, Year, r, Emotion)

# write to .csv
write.csv(dat_boxPlot_emotion_neg, "importData_boxplot_FMemp_Emotion_neg.csv")

# load data
boxPlot_emotion_neg <- read.csv("C:/Users/wease/Desktop/Ali/Ali_pubPaper/Rdata/importData_boxplot_FMemp_Emotion_neg.csv", header = TRUE)

# plot basic box plot
plot(r ~ Emotion, boxPlot_emotion_neg, xlab = "Emotion")
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# ang & dis
anova(msep_emotion_neg, L = c(1, -1, 0, 0, 0))

# ang & fea
anova(msep_emotion_neg, L = c(1, 0, -1, 0, 0))

# ang & pai
anova(msep_emotion_neg, L = c(1, 0, 0, -1, 0))

# ang & sad
anova(msep_emotion_neg, L = c(1, 0, 0, 0, -1))


# dis & fea
anova(msep_emotion_neg, L = c(0, 1, -1, 0, 0))

# dis & pai
anova(msep_emotion_neg, L = c(0, 1, 0, -1, 0))

# dis & sad
anova(msep_emotion_neg, L = c(0, 1, 0, 0, -1))


# fea & pai
anova(msep_emotion_neg, L = c(0, 0, 1, -1, 0))

# fea & sad
anova(msep_emotion_neg, L = c(0, 0, 1, 0, -1))


# pai & sad
anova(msep_emotion_neg, L = c(0, 0, 0, 1, -1))


# Emotion line plot
plot(coef(msep_emotion_neg)[1:5], type = "o", pch = 19, ylim = c(-0.1, 0.5), xlab = "Emotion", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:5, labels = c("Anger","Disgust","Fear", "Pain", "Sadness"))
title("Estimated Average Effects based on the Additive Model")


# Emotion valence
# ---------------

# calculate number of studies with specific values
dat_emp %>% filter(Emotion_valence == "neg") %>% distinct(id)
dat_emp %>% filter(Emotion_valence == "pos") %>% distinct(id)

# concatenate values
emo_valTag <- levels(unique(dat_emp$Emotion_valence, incomparables = FALSE))
emo_valTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(emo_valTag))
{
  rma(yi = r, vi = var_r, data = dat_emp, subset = (Emotion_valence == emo_valTag[i]))
  columnName <- paste("emo_val",emo_valTag[i], sep=".")
  dat_emp[columnName] <- ifelse(dat_emp$Emotion_valence == emo_valTag[i], 1, 0)
}

# est. separate effects
msep_emoVal <- rma(yi = r, vi = var_r, mods = ~ factor(Emotion_valence) - 1, data = dat_emp)
msep_emoVal

# test moderator
m_emoVal <- rma(yi = r, vi = var_r, mods = ~ factor(Emotion_valence), data = dat_emp)
m_emoVal


# Emotion valence box plot

# filter data
dat_boxPlot_emoVal <- select(dat_emp, id, Study, Year, r, Emotion_valence)

# write to .csv
write.csv(dat_boxPlot_emoVal, "importData_boxplot_FMemp_EmoVal.csv")

# load data as boxPlot_emoVal

# plot basic box plot
plot(r ~ Emotion_valence, boxPlot_emoVal, xlab = "Emotion Valence")
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# neg & pos
anova(msep_emoVal, L = c(1, -1))

# Emotion valence line plot
plot(coef(msep_emoVal)[1:2], type = "o", pch = 19, ylim = c(0, 0.2), xlab = "Emotion Valence", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("Negative","Positive"))
title("Estimated Average Effects based on the Additive Model")


# Stimuli
# -------

# calculate number of studies with specific values
dat_emp %>% filter(Stimuli == "dyn") %>% distinct(id)
dat_emp %>% filter(Stimuli == "sta") %>% distinct(id)

# concatenate values
stimuliTag <- levels(unique(dat_emp$Stimuli, incomparables = FALSE))
stimuliTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(stimuliTag))
{
  rma(yi = r, vi = var_r, data = dat_emp, subset = (Stimuli == stimuliTag[i]))
  columnName <- paste("stimuli",stimuliTag[i], sep=".")
  dat_emp[columnName] <- ifelse(dat_emp$Stimuli == stimuliTag[i], 1, 0)
}

# est. separate effects
msep_stimuli <- rma(yi = r, vi = var_r, mods = ~ factor(Stimuli) - 1, data = dat_emp)
msep_stimuli

# test moderator
m_stimuli <- rma(yi = r, vi = var_r, mods = ~ factor(Stimuli), data = dat_emp)
m_stimuli


# Stimuli box plot

# filter data
dat_boxPlot_stimuli <- select(dat_emp, id, Study, Year, r, Stimuli)

# write to .csv
write.csv(dat_boxPlot_stimuli, "importData_boxplot_FMemp_stimuli.csv")

# load data as boxPlot_stimuli

# plot basic box plot
plot(r ~ Stimuli, boxPlot_stimuli)
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# dyn & sta
anova(msep_stimuli, L = c(1, -1))

# Stimuli line plot
plot(coef(msep_stimuli)[1:2], type = "o", pch = 19, ylim = c(0, 0.2), xlab = "Stimuli", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("Static","Dynamic"))
title("Estimated Average Effects based on the Additive Model")


# Measure
# -------

# select specific values from data
dat_emp_measure <- filter(dat_emp, Measure != "Rec")

# calculate number of studies with specific values
dat_emp_measure %>% filter(Measure == "state") %>% distinct(id)
dat_emp_measure %>% filter(Measure == "trait") %>% distinct(id)

# concatenate values
measureTag <- levels(unique(dat_emp_measure$Measure, incomparables = FALSE))
measureTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(measureTag))
{
  rma(yi = r, vi = var_r, data = dat_emp_measure, subset = (Measure == measureTag[i]))
  columnName <- paste("measure",measureTag[i], sep=".")
  dat_emp_measure[columnName] <- ifelse(dat_emp_measure$Measure == measureTag[i], 1, 0)
}

# est. separate effects
msep_measure <- rma(yi = r, vi = var_r, mods = ~ factor(Measure) - 1, data = dat_emp_measure)
msep_measure

# test moderator
m_measure <- rma(yi = r, vi = var_r, mods = ~ factor(Measure), data = dat_emp_measure)
m_measure


# Measure box plot

# filter data
dat_boxPlot_measure <- select(dat_emp_measure, id, Study, Year, r, Measure)

# write to .csv
write.csv(dat_boxPlot_measure, "importData_boxplot_FMemp_measure.csv")

# load data as boxPlot_measure

# plot basic box plot
plot(r ~ Measure, boxPlot_measure)
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# state & trait
anova(msep_measure, L = c(1, -1))

# Measure line plot
plot(coef(msep_measure)[1:2], type = "o", pch = 19, ylim = c(0, 0.2), xlab = "Measure", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("State Empathy","Trait Empathy"))
title("Estimated Average Effects based on the Additive Model")


# Measure type - trait
# --------------------

# select specific values from data
dat_emp_measure_trait <- filter(dat_emp, Measure == "trait")

# concatenate values
meas_traitTag <- levels(unique(dat_emp_measure_trait$Measure_type_full, incomparables = FALSE))
meas_traitTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(meas_traitTag))
{
  rma(yi = r, vi = var_r, data = dat_emp_measure_trait, subset = (Measure_type_full == meas_traitTag[i]))
  columnName <- paste("meas_typ",meas_traitTag[i], sep=".")
  dat_emp_measure_trait[columnName] <- ifelse(dat_emp_measure_trait$Measure_type_full == meas_traitTag[i], 1, 0)
}

# est. separate effects
msep_measureTrait <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type_full) - 1, data = dat_emp_measure_trait)
msep_measureTrait

# test moderator
m_measureTrait <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type_full), data = dat_emp_measure_trait)
m_measureTrait


# Measure type box plot

# filter data
dat_boxPlot_measTrait <- select(dat_emp_measure_trait, id, Study, Year, r, Measure_type)

# write to .csv
write.csv(dat_boxPlot_measTrait, "importData_boxplot_FMemp_MeasTrait.csv")

# load data as boxPlot_measTrait

# plot basic box plot
plot(r ~ Measure_type, boxPlot_measTrait, col = rainbow(length(unique(boxPlot_measTrait))), las = 2, xlab = "") # took out "Measure_type" on x-axis
plot(r ~ Measure_type, boxPlot_measTrait, las = 2, xlab = "") # took out "Measure_type" on x-axis
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# trait emp (BEES, EQ, EQ aff, EQ cog, IRI ec, IRI pd, IRI pt, QMEE, TEQ)

# BEES - EQ
anova(msep_measureTrait, L = c(1, -1, 0, 0, 0, 0, 0, 0, 0))

# BEES & EQ aff
anova(msep_measureTrait, L = c(1, 0, -1, 0, 0, 0, 0, 0, 0))

# BEES & EQ cog
anova(msep_measureTrait, L = c(1, 0, 0, -1, 0, 0, 0, 0, 0))

# BEES & IRI ec
anova(msep_measureTrait, L = c(1, 0, 0, 0, -1, 0, 0, 0, 0))

# BEES & IRI pd
anova(msep_measureTrait, L = c(1, 0, 0, 0, 0, -1, 0, 0, 0))

# BEES & IRI pt
anova(msep_measureTrait, L = c(1, 0, 0, 0, 0, 0, -1, 0, 0))

# BEES & QMEE
anova(msep_measureTrait, L = c(1, 0, 0, 0, 0, 0, 0, -1, 0))

# BEES & TEQ
anova(msep_measureTrait, L = c(1, 0, 0, 0, 0, 0, 0, 0, -1))


# EQ & EQ aff
anova(msep_measureTrait, L = c(0, 1, -1, 0, 0, 0, 0, 0, 0))

# EQ & EQ cog
anova(msep_measureTrait, L = c(0, 1, 0, -1, 0, 0, 0, 0, 0))

# EQ & IRI ec
anova(msep_measureTrait, L = c(0, 1, 0, 0, -1, 0, 0, 0, 0))

# EQ & IRI pd
anova(msep_measureTrait, L = c(0, 1, 0, 0, 0, -1, 0, 0, 0))

# EQ & IRI pt
anova(msep_measureTrait, L = c(0, 1, 0, 0, 0, 0, -1, 0, 0))

# EQ & QMEE
anova(msep_measureTrait, L = c(0, 1, 0, 0, 0, 0, 0, -1, 0))

# EQ & TEQ
anova(msep_measureTrait, L = c(0, 1, 0, 0, 0, 0, 0, 0, -1))


# EQ aff & EQ cog
anova(msep_measureTrait, L = c(0, 0, 1, -1, 0, 0, 0, 0, 0))

# EQ aff & IRI ec
anova(msep_measureTrait, L = c(0, 0, 1, 0, -1, 0, 0, 0, 0))

# EQ aff & IRI pd
anova(msep_measureTrait, L = c(0, 0, 1, 0, 0, -1, 0, 0, 0))

# EQ aff & IRI pt
anova(msep_measureTrait, L = c(0, 0, 1, 0, 0, 0, -1, 0, 0))

# EQ aff & QMEE
anova(msep_measureTrait, L = c(0, 0, 1, 0, 0, 0, 0, -1, 0))

# EQ aff & TEQ
anova(msep_measureTrait, L = c(0, 0, 1, 0, 0, 0, 0, 0, -1))


# EQ cog & IRI ec
anova(msep_measureTrait, L = c(0, 0, 0, 1, -1, 0, 0, 0, 0))

# EQ cog & IRI pd
anova(msep_measureTrait, L = c(0, 0, 0, 1, 0, -1, 0, 0, 0))

# EQ cog & IRI pt
anova(msep_measureTrait, L = c(0, 0, 0, 1, 0, 0, -1, 0, 0))

# EQ cog & QMEE
anova(msep_measureTrait, L = c(0, 0, 0, 1, 0, 0, 0, -1, 0))

# EQ cog & TEQ
anova(msep_measureTrait, L = c(0, 0, 0, 1, 0, 0, 0, 0, -1))


# IRI ec & IRI pd
anova(msep_measureTrait, L = c(0, 0, 0, 0, 1, -1, 0, 0, 0))

# IRI ec & IRI pt
anova(msep_measureTrait, L = c(0, 0, 0, 0, 1, 0, -1, 0, 0))

# IRI ec & QMEE
anova(msep_measureTrait, L = c(0, 0, 0, 0, 1, 0, 0, -1, 0))

# IRI ec & TEQ
anova(msep_measureTrait, L = c(0, 0, 0, 0, 1, 0, 0, 0, -1))


# IRI pd & IRI pt
anova(msep_measureTrait, L = c(0, 0, 0, 0, 0, 1, -1, 0, 0))

# IRI pd & QMEE
anova(msep_measureTrait, L = c(0, 0, 0, 0, 0, 1, 0, -1, 0))

# IRI pd & TEQ
anova(msep_measureTrait, L = c(0, 0, 0, 0, 0, 1, 0, 0, -1))


# IRI pt & QMEE
anova(msep_measureTrait, L = c(0, 0, 0, 0, 0, 0, 1, -1, 0))

# IRI pt & TEQ
anova(msep_measureTrait, L = c(0, 0, 0, 0, 0, 0, 1, 0, -1))


# QMEE & TEQ
anova(msep_measureTrait, L = c(0, 0, 0, 0, 0, 0, 0, 1, -1))


# Measure Type line plot
plot(coef(msep_measureTrait)[1:9], type = "o", pch = 19, ylim = c(-0.2, 0.6), xlab = "", ylab = "Standardized Mean Difference", 
     xaxt = "n", bty = "l")
axis(side = 1, at = 1:9, las = 2, labels = c("BEES",  
                                              "EQ", 
                                              "EQ aff", 
                                              "EQ cog",
                                              "IRI ec", 
                                              "IRI pd", 
                                              "IRI pt", 
                                              "QMEE",
                                              "TEQ"))
title("Estimated Average Effects based on the Additive Model")


# Measure type - state
# --------------------

# select specific values from data
dat_emp_measure_state <- filter(dat_emp, Measure == "state")

# concatenate values
meas_stateTag <- levels(unique(dat_emp_measure_state$Measure_type_full, incomparables = FALSE))
meas_stateTag

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(meas_stateTag))
{
  rma(yi = r, vi = var_r, data = dat_emp_measure_state, subset = (Measure_type_full == meas_stateTag[i]))
  columnName <- paste("meas_typ",meas_stateTag[i], sep=".")
  dat_emp_measure_state[columnName] <- ifelse(dat_emp_measure_state$Measure_type_full == meas_stateTag[i], 1, 0)
}

# est. separate effects
msep_measureState <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type_full) - 1, data = dat_emp_measure_state)
msep_measureState

# test moderator
m_measureState <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type_full), data = dat_emp_measure_state)
m_measureState


# Measure type box plot

# filter data
dat_boxPlot_measState <- select(dat_emp_measure_state, id, Study, Year, r, Measure_type)

# write to .csv
write.csv(dat_boxPlot_measState, "importData_boxplot_FMemp_MeasState.csv")

# load data as boxPlot_measState

# plot basic box plot
plot(r ~ Measure_type, boxPlot_measState, col = rainbow(length(unique(boxPlot_measState))), las = 2, xlab = "") # took out "Measure_type" on x-axis
plot(r ~ Measure_type, boxPlot_measState, las = 2, xlab = "") # took out "Measure_type" on x-axis
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# state emp (MET, self-report, self unp)

# MET & self-report
anova(msep_measureType, L = c(1, -1, 0))

# MET & self unp
anova(msep_measureType, L = c(1, 0, -1))


# self-report & self unp
anova(msep_measureType, L = c(1, -1))


# Measure Type line plot

plot(coef(msep_measureType)[1:9], type = "o", pch = 19, ylim = c(-0.2, 0.6), xlab = "", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:9, las = 2, labels = c("MET", 
                                             "Self-report", 
                                             "Self unp"))
title("Estimated Average Effects based on the Additive Model")



# Prime type
# ----------

# calculate number of studies with specific values
dat_emp %>% filter(Prime_type == "high emp") %>% distinct(id)
dat_emp %>% filter(Prime_type == "low emp") %>% distinct(id)

# select specific values from data
dat_emp_prime_type <- filter(dat_emp, Prime_type != "NA")

# concatenate values
primetypTag <- levels(unique(dat_emp_prime_type$Prime_type, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(primetypTag))
{
  rma(yi = r, vi = var_r, data = dat_emp_prime_type, subset = (Prime_type == primetypTag[i]))
  columnName <- paste("prime_typ",primetypTag[i], sep=".")
  dat_emp_prime_type[columnName] <- ifelse(dat_emp_prime_type$Prime_type == primetypTag[i], 1, 0)
}

# est. separate effects
msep_primeType <- rma(yi = r, vi = var_r, mods = ~ factor(Prime_type) - 1, data = dat_emp_prime_type)
msep_primeType

# test moderator
m_primeType <- rma(yi = r, vi = var_r, mods = ~ factor(Prime_type), data = dat_emp_prime_type)
m_primeType


# Prime type box plot

# filter data
dat_boxPlot_primeType <- select(dat_emp, id, Study, Year, r, Prime_type)

# write to .csv
write.csv(dat_boxPlot_primeType, "importData_boxplot_FMemp_primeType.csv")

# load data as boxPlot_primeType

# plot basic box plot
plot(r ~ Prime_type, boxPlot_primeType, xlab = "Prime Type")
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# high emp & low emp
anova(msep_primeType, L = c(1, -1))

# Prime line plot
plot(coef(msep_primeType)[1:2], type = "o", pch = 19, ylim = c(0, 0.3), xlab = "Prime", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("High empathy","Low Empathy"))
title("Estimated Average Effects based on the Additive Model")


# Measure emo vs. cog
# -------------------------------------

# filter IRI ec, IRI pt, EQ aff, EQ cog & QMEE
emoCog <- c("IRI ec", "IRI pt", "EQ aff", "EQ cog", "QMEE", "BEES")
dat_emoCog <- filter(dat_emp, Measure_type %in% emoCog)

# copy column and rename measure types to emo and cog
dat_emoCog$Measure_type <- as.character(dat_emoCog$Measure_type)
class(dat_emoCog$Measure_type)

# calculate number of studies with specific values
dat_emoCog$Measure_type[dat_emoCog$Measure_type == "IRI ec"] <- "emotion"
dat_emoCog$Measure_type[dat_emoCog$Measure_type == "EQ aff"] <- "emotion"
dat_emoCog$Measure_type[dat_emoCog$Measure_type == "QMEE"] <- "emotion"
dat_emoCog$Measure_type[dat_emoCog$Measure_type == "BEES"] <- "emotion"
dat_emoCog$Measure_type[dat_emoCog$Measure_type == "IRI pt"] <- "cognitive"
dat_emoCog$Measure_type[dat_emoCog$Measure_type == "EQ cog"] <- "cognitive"

# calculate number of studies and number of values with specific values
dat_emoCog %>% filter(Measure_type == "cognitive") %>% distinct(id)
dat_emoCog %>% filter(Measure_type == "emotion") %>% distinct(id)
table(dat_emoCog$Measure_type)

# concatenate values
emoCogtTag <- levels(unique(dat_emoCog$Measure_type, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(emoCogtTag))
{
  rma(yi = r, vi = var_r, data = dat_emoCog, subset = (Measure_type == emoCogtTag[i]))
  columnName <- paste("iriEmoCog",emoCogtTag[i], sep=".")
  dat_emoCog[columnName] <- ifelse(dat_emoCog$Measure_type == emoCogtTag[i], 1, 0)
}

# est. separate effects
msep_emoCog <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type) - 1, data = dat_emoCog)
msep_emoCog

# test moderator
m_emoCog <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type), data = dat_emoCog)
m_emoCog


# emo vs. cog box plot

# filter data
dat_boxPlot_emoCog <- select(dat_emoCog, id, Study, Year, r, Measure_type)

# write to .csv
write.csv(dat_boxPlot_emoCog, "importData_boxplot_FMemp_emoCog.csv")

# load data as boxPlot_emoCog

# plot basic box plot
plot(r ~ Measure_type, boxPlot_emoCog, xlab = "cognitive vs. emotion")
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# IRI ec (emo) & IRI pt (cog)
anova(msep_iriEmoCog, L = c(1, -1))

# IRI ec (emo) & IRI pt (cog) line plot
plot(coef(msep_iriEmoCog)[1:2], type = "o", pch = 19, ylim = c(-0.1, 0), xlab = "IRI ec (emo) vs. IRI pt (cog)", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("IRI ec (emo)","IRI pt (cog)"))
title("Estimated Average Effects based on the Additive Model")


# Measure emo + state vs. cog
# -------------------------------------

# filter IRI ec, IRI pt, EQ aff, EQ cog & QMEE
emoStateCog <- c("IRI ec", "IRI pt", "EQ aff", "EQ cog", "QMEE", "BEES", "self-report", "self unp", "Strayer aff")
dat_emoStateCog <- filter(dat_emp, Measure_type %in% emoStateCog)

# copy column and rename measure types to emo and cog
dat_emoStateCog$Measure_type <- as.character(dat_emoStateCog$Measure_type)
class(dat_emoStateCog$Measure_type)

dat_emoStateCog$Measure_type[dat_emoStateCog$Measure_type == "IRI ec"] <- "emotionAndState"
dat_emoStateCog$Measure_type[dat_emoStateCog$Measure_type == "EQ aff"] <- "emotionAndState"
dat_emoStateCog$Measure_type[dat_emoStateCog$Measure_type == "QMEE"] <- "emotionAndState"
dat_emoStateCog$Measure_type[dat_emoStateCog$Measure_type == "BEES"] <- "emotionAndState"
dat_emoStateCog$Measure_type[dat_emoStateCog$Measure_type == "self-report"] <- "emotionAndState"
dat_emoStateCog$Measure_type[dat_emoStateCog$Measure_type == "self unp"] <- "emotionAndState"
dat_emoStateCog$Measure_type[dat_emoStateCog$Measure_type == "IRI pt"] <- "cognitive"
dat_emoStateCog$Measure_type[dat_emoStateCog$Measure_type == "EQ cog"] <- "cognitive"

# calculate number of studies and number of values with specific values
dat_emoStateCog %>% filter(Measure_type == "emotionAndState") %>% distinct(id)
dat_emoStateCog %>% filter(Measure_type == "cognitive") %>% distinct(id)
table(dat_emoStateCog$Measure_type)

# concatenate values
emoStateCogtTag <- levels(unique(dat_emoStateCog$Measure_type, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(emoStateCogtTag))
{
  rma(yi = r, vi = var_r, data = dat_emoStateCog, subset = (Measure_type == emoStateCogtTag[i]))
  columnName <- paste("EmoStateCog",emoStateCogtTag[i], sep=".")
  dat_emoStateCog[columnName] <- ifelse(dat_emoStateCog$Measure_type == emoStateCogtTag[i], 1, 0)
}

# est. separate effects
msep_emoStateCog <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type) - 1, data = dat_emoStateCog)
msep_emoStateCog

# test moderator
m_emoStateCog <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type), data = dat_emoStateCog)
m_emoStateCog


# emo vs. cog box plot

# filter data
dat_boxPlot_emoStateCog <- select(dat_emoStateCog, id, Study, Year, r, Measure_type)

# write to .csv
write.csv(dat_boxPlot_emoStateCog, "importData_boxplot_FMemp_emoStateCog.csv")

# load data as boxPlot_emoStateCog

# plot basic box plot
plot(r ~ Measure_type, boxPlot_emoStateCog, xlab = "cognitive vs. emotion")
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# IRI ec (emo) & IRI pt (cog)
anova(msep_iriEmoCog, L = c(1, -1))

# IRI ec (emo) & IRI pt (cog) line plot
plot(coef(msep_iriEmoCog)[1:2], type = "o", pch = 19, ylim = c(-0.1, 0), xlab = "IRI ec (emo) vs. IRI pt (cog)", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("IRI ec (emo)","IRI pt (cog)"))
title("Estimated Average Effects based on the Additive Model")


# Measure emo vs. state
# ---------------------

# filter IRI ec, IRI pt, EQ aff, EQ cog & QMEE
emoState <- c("IRI ec", "EQ aff", "QMEE", "BEES", "self-report", "self unp", "MET")
dat_emoState <- filter(dat_emp, Measure_type %in% emoState)

# copy column and rename measure types to emo and cog
dat_emoState$Measure_type <- as.character(dat_emoState$Measure_type)
class(dat_emoState$Measure_type)

# calculate number of studies with specific values
dat_emoState$Measure_type[dat_emoState$Measure_type == "IRI ec"] <- "emotional"
dat_emoState$Measure_type[dat_emoState$Measure_type == "EQ aff"] <- "emotional"
dat_emoState$Measure_type[dat_emoState$Measure_type == "QMEE"] <- "emotional"
dat_emoState$Measure_type[dat_emoState$Measure_type == "BEES"] <- "emotional"
dat_emoState$Measure_type[dat_emoState$Measure_type == "self-report"] <- "state"
dat_emoState$Measure_type[dat_emoState$Measure_type == "self unp"] <- "state"
dat_emoState$Measure_type[dat_emoState$Measure_type == "MET"] <- "state"

# calculate number of studies and number of values with specific values
dat_emoState %>% filter(Measure_type == "emotional") %>% distinct(id)
dat_emoState %>% filter(Measure_type == "state") %>% distinct(id)
table(dat_emoState$Measure_type)

# concatenate values
emoStateTag <- levels(unique(dat_emoState$Measure_type, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(emoStateTag))
{
  rma(yi = r, vi = var_r, data = dat_emoState, subset = (Measure_type == emoStateTag[i]))
  columnName <- paste("EmoState",emoStateTag[i], sep=".")
  dat_emoState[columnName] <- ifelse(dat_emoState$Measure_type == emoStateTag[i], 1, 0)
}

# est. separate effects
msep_emoState <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type) - 1, data = dat_emoState)
msep_emoState

# test moderator
m_emoState <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type), data = dat_emoState)
m_emoState


# emo vs. state box plot

# filter data
dat_boxPlot_emoState <- select(dat_emoState, id, Study, Year, r, Measure_type)

# write to .csv
write.csv(dat_boxPlot_emoState, "importData_boxplot_FMemp_emoState.csv")

# load data as boxPlot_emoState

# plot basic box plot
plot(r ~ Measure_type, boxPlot_emoState, xlab = "Emotional empathy vs. state empathy")
axis(side = 1, at = 1:2, labels = c("Emotional empathy","State empathy"))
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# IRI ec (emo) & IRI pt (cog)
anova(msep_iriEmoCog, L = c(1, -1))

# IRI ec (emo) & IRI pt (cog) line plot
plot(coef(msep_iriEmoCog)[1:2], type = "o", pch = 19, ylim = c(-0.1, 0), xlab = "IRI ec (emo) vs. IRI pt (cog)", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("IRI ec (emo)","IRI pt (cog)"))
title("Estimated Average Effects based on the Additive Model")


# Fixation cross vs. baselines
# ----------------------------

# calculate number of studies with specific values
dat_emp %>% filter(Prestimulus == "fixationcross") %>% distinct(id)
dat_emp %>% filter(Prestimulus == "neutral") %>% distinct(id)
table(dat_emp$Prestimulus)

# concatenate values
fixationTag <- levels(unique(dat_emp$Prestimulus, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(fixationTag))
{
  rma(yi = r, vi = var_r, data = dat_emp, subset = (Prestimulus == fixationTag[i]))
  columnName <- paste("Prestim",fixationTag[i], sep=".")
  dat_emp[columnName] <- ifelse(dat_emp$Prestimulus == fixationTag[i], 1, 0)
}

# est. separate effects
msep_prestim <- rma(yi = r, vi = var_r, mods = ~ factor(Prestimulus) - 1, data = dat_emp)
msep_prestim

# test moderator
m_prestim <- rma(yi = r, vi = var_r, mods = ~ factor(Prestimulus), data = dat_emp)
m_prestim


# fixation cross vs. neutral box plot

# filter data
dat_boxPlot_prestim <- select(dat_emp, id, Study, Year, r, Prestimulus)

# write to .csv
write.csv(dat_boxPlot_prestim, "importData_boxplot_FMemp_prestim.csv")

# load data as boxPlot_prestim

# plot basic box plot
plot(r ~ Prestimulus, dat_boxPlot_prestim, xlab = "Fixation cross vs. Neutral baseline")
axis(side = 1, at = 1:2, labels = c("Emotional empathy","State empathy"))
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# IRI ec (emo) & IRI pt (cog)
anova(msep_iriEmoCog, L = c(1, -1))

# IRI ec (emo) & IRI pt (cog) line plot
plot(coef(msep_iriEmoCog)[1:2], type = "o", pch = 19, ylim = c(-0.1, 0), xlab = "IRI ec (emo) vs. IRI pt (cog)", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("IRI ec (emo)","IRI pt (cog)"))
title("Estimated Average Effects based on the Additive Model")


# Empathy (all) vs. emo rec
# -------------------------

# filter studies that measure emp and Rec from original data set
rec_num <- c(8, 9, 10, 17)
dat_empRec <- filter(dat_emp, id == rec_num)
dat_empRec$Measure <- as.character(dat_empRec$Measure)
class(dat_empRec$Measure)

# rename measure 
dat_empRec$Measure[dat_empRec$Measure == "state"] <- "recognition"
dat_empRec$Measure[dat_empRec$Measure == "trait"] <- "recognition"

# filter out dat_emp studies 8, 9, 10, 17 and add in dat_empRec to dat_emp
dat_empRec2 <- dat_emp %>%
  filter(id != 8) %>%
  filter(id != 9) %>%
  filter(id != 10) %>%
  filter(id != 17)
dat_empall <- bind_rows(dat_empRec, dat_empRec2)

# rename measure types to emo and cog
dat_empall$Measure <- as.character(dat_empall$Measure)
class(dat_empall$Measure)
dat_empall$Measure[dat_empall$Measure == "trait"] <- "empathy"
dat_empall$Measure[dat_empall$Measure == "state"] <- "empathy"

# calculate number of studies and number of values with specific values
dat_empall %>% filter(Measure == "empathy") %>% distinct(id)
dat_empall %>% filter(Measure == "recognition") %>% distinct(id)
table(dat_empall$Measure)

# concatenate values
empallrecTag <- levels(unique(dat_empall$Measure, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(empallrecTag))
{
  rma(yi = r, vi = var_r, data = dat_empall, subset = (Measure == empallrecTag[i]))
  columnName <- paste("empallrec",empallrecTag[i], sep=".")
  dat_empall[columnName] <- ifelse(dat_empall$Measure == empallrecTag[i], 1, 0)
}

# est. separate effects
msep_empallrec <- rma(yi = r, vi = var_r, mods = ~ factor(Measure) - 1, data = dat_empall)
msep_empallrec

# test moderator
m_empallrec <- rma(yi = r, vi = var_r, mods = ~ factor(Measure), data = dat_empall)
m_empallrec


# emp all vs. rec box plot

# filter data
dat_boxPlot_empallrec <- select(dat_empall, id, Study, Year, r, Measure)

# write to .csv
write.csv(dat_boxPlot_empallrec, "importData_boxplot_FMemp_empallrec.csv")

# load data as boxPlot_empallrec

# plot basic box plot
plot(r ~ Measure, boxPlot_empallrec, xaxt = "na", xlab = "Measured empathy only vs. Measured empathy & emotion recognition")
axis(side = 1, at = 1:2, labels = c("Empathy only","Empathy & emotion recognition"))
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# IRI ec (emo) & IRI pt (cog)
anova(msep_iriEmoCog, L = c(1, -1))

# IRI ec (emo) & IRI pt (cog) line plot
plot(coef(msep_iriEmoCog)[1:2], type = "o", pch = 19, ylim = c(-0.1, 0), xlab = "IRI ec (emo) vs. IRI pt (cog)", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("IRI ec (emo)","IRI pt (cog)"))
title("Estimated Average Effects based on the Additive Model")


# Measure IRI vs. EQ
# ------------------

# filter IRI ec, IRI pd, IRI pt, EQ, EQ aff, EQ cog
iri_eq <- c("IRI ec", "IRI pd", "IRI pt", "EQ", "EQ aff", "EQ cog")
dat_irieq <- filter(dat_emp, Measure_type %in% iri_eq)

# copy column and rename measure types to emo and cog
dat_irieq$Measure_type <- as.character(dat_irieq$Measure_type)
class(dat_irieq$Measure_type)

# calculate number of studies with specific values
dat_irieq$Measure_type[dat_irieq$Measure_type == "IRI ec"] <- "IRI"
dat_irieq$Measure_type[dat_irieq$Measure_type == "IRI pd"] <- "IRI"
dat_irieq$Measure_type[dat_irieq$Measure_type == "IRI pt"] <- "IRI"
dat_irieq$Measure_type[dat_irieq$Measure_type == "EQ"] <- "EQ"
dat_irieq$Measure_type[dat_irieq$Measure_type == "EQ aff"] <- "EQ"
dat_irieq$Measure_type[dat_irieq$Measure_type == "EQ cog"] <- "EQ"

# calculate number of studies and number of values with specific values
dat_irieq %>% filter(Measure_type == "EQ") %>% distinct(id)
dat_irieq %>% filter(Measure_type == "IRI") %>% distinct(id)
table(dat_irieq$Measure_type)

# concatenate values
irieqTag <- levels(unique(dat_irieq$Measure_type, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(irieqTag))
{
  rma(yi = r, vi = var_r, data = dat_irieq, subset = (Measure_type == irieqTag[i]))
  columnName <- paste("irieq",irieqTag[i], sep=".")
  dat_irieq[columnName] <- ifelse(dat_irieq$Measure_type == irieqTag[i], 1, 0)
}

# est. separate effects
msep_irieq <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type) - 1, data = dat_irieq)
msep_irieq

# test moderator
m_irieq <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type), data = dat_irieq)
m_irieq


# emo vs. state box plot

# filter data
dat_boxPlot_emoState <- select(dat_irieq, id, Study, Year, r, Measure_type)

# write to .csv
write.csv(dat_boxPlot_emoState, "importData_boxplot_FMemp_emoState.csv")

# load data as boxPlot_emoState

# plot basic box plot
plot(r ~ Measure_type, boxPlot_emoState, xlab = "Emotional empathy vs. state empathy")
axis(side = 1, at = 1:2, labels = c("Emotional empathy","State empathy"))
title("Estimated Average Effects for Each Moderator Level")


# Test dif between levels

# IRI ec (emo) & IRI pt (cog)
anova(msep_iriEmoCog, L = c(1, -1))

# IRI ec (emo) & IRI pt (cog) line plot
plot(coef(msep_iriEmoCog)[1:2], type = "o", pch = 19, ylim = c(-0.1, 0), xlab = "IRI ec (emo) vs. IRI pt (cog)", ylab = "Standardized Mean Difference", xaxt = "n", bty = "l")
axis(side = 1, at = 1:2, labels = c("IRI ec (emo)","IRI pt (cog)"))
title("Estimated Average Effects based on the Additive Model")


# <1 stimulus exposure vs. >1 stimulus exposure
# ---------------------------------------------

# filter n/s
dat_emp_exposure <- filter(dat_emp, Stimulus_exposure != "n/s")

# copy column and rename measure types to emo and cog
dat_emp_exposure$Stimulus_exposure <- as.character(dat_emp_exposure$Stimulus_exposure)
class(dat_emp_exposure$Stimulus_exposure)

# calculate number of studies and number of values with specific values
dat_emp_exposure %>% filter(Stimulus_exposure == "<1") %>% distinct(id)
dat_emp_exposure %>% filter(Stimulus_exposure == ">1") %>% distinct(id)
table(dat_emp_exposure$Stimulus_exposure)

# concatenate values
exposureTag <- levels(unique(dat_emp_exposure$Stimulus_exposure, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(exposureTag))
{
  rma(yi = r, vi = var_r, data = dat_emp_exposure, subset = (Stimulus_exposure == exposureTag[i]))
  columnName <- paste("exposure",exposureTag[i], sep=".")
  dat_emp_exposure[columnName] <- ifelse(dat_emp_exposure$Stimulus_exposure == exposureTag[i], 1, 0)
}

# est. separate effects
msep_exposure <- rma(yi = r, vi = var_r, mods = ~ factor(Stimulus_exposure) - 1, data = dat_emp_exposure)
msep_exposure

# test moderator
m_exposure <- rma(yi = r, vi = var_r, mods = ~ factor(Stimulus_exposure), data = dat_emp_exposure)
m_exposure


# <1 stimulus exposure vs. >1 stimulus exposure box plot

# filter data
dat_boxPlot_exposure <- select(dat_emp_exposure, id, Study, Year, r, Stimulus_exposure)

# write to .csv
write.csv(dat_boxPlot_exposure, "importData_boxplot_FMemp_exposure.csv")

# load data as dat_boxPlot_exposure

# plot basic box plot
plot(r ~ Stimulus_exposure, dat_boxPlot_exposure, xlab = "< 1 second vs. > 1 second")
axis(side = 1, at = 1:2, labels = c("Emotional empathy","State empathy"))
title("Estimated Average Effects for Each Moderator Level")


# explicit vs. non-explicit
# -------------------------

# calculate number of studies and number of values with specific values
dat_emp %>% filter(Explicit == "n") %>% distinct(id)
dat_emp %>% filter(Explicit == "y") %>% distinct(id)
table(dat_emp$Explicit)

# concatenate values
explicitTag <- levels(unique(dat_emp$Explicit, incomparables = FALSE))

# fit separate models within each level & create necessary dummy variables
for (i in 1:length(explicitTag))
{
  rma(yi = r, vi = var_r, data = dat_emp, subset = (Explicit == explicitTag[i]))
  columnName <- paste("explicit",explicitTag[i], sep=".")
  dat_emp[columnName] <- ifelse(dat_emp$Explicit == explicitTag[i], 1, 0)
}

# est. separate effects
msep_explicit <- rma(yi = r, vi = var_r, mods = ~ factor(Explicit) - 1, data = dat_emp)
msep_explicit

# test moderator
m_explicit <- rma(yi = r, vi = var_r, mods = ~ factor(Explicit), data = dat_emp)
m_explicit


# explicit vs. non-explicit box plot

# filter data
dat_boxPlot_explicit <- select(dat_emp, id, Study, Year, r, Explicit)

# write to .csv
write.csv(dat_boxPlot_explicit, "importData_boxplot_FMemp_explicit.csv")

# load data as dat_boxPlot_explicit

# plot basic box plot
plot(r ~ Explicit, dat_boxPlot_explicit, xlab = "Non-explicit vs. Explicit", xaxt = "n")
axis(side = 1, at = 1:2, labels = c("Non-explicit","Explicit"))
title("Estimated Average Effects for Each Moderator Level")


# -----------------------------
# Confounding mods for FM x Emp  
# -----------------------------

# Muscles & Gender
# ----------------

# fit model
m_muscGen <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) + factor(Gender), data = dat_emp_gender_mf, method = "ML")
m_muscGen

# tests whether Muscle is significant while controlling for influence of Gender
anova(m_muscGen, btt = 2) 

# tests whether Gender is significant while controlling for influence of Muscle
anova(m_muscGen, btt = 3) 


# Muscles & Emotions
# ------------------

# fit model
m_muscEmos <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) + factor(Emotion), data = dat_emp_emo_wOutNeg, method = "ML")
m_muscEmos

# tests whether Muscle is significant while controlling for influence of Emotion
anova(m_muscEmos, btt = 2:5) 

# tests whether Emotion is significant while controlling for influence of Muscle
anova(m_muscEmos, btt = 6:11) 


# Muscles & Emotions - neg
# ------------------------

# fit model
m_muscEmos <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) + factor(Emotion), data = dat_emp_musc_neg, method = "ML")
m_muscEmos

# tests whether Muscle is significant while controlling for influence of Emotion
anova(m_muscEmos, btt = 2) 

# tests whether Emotion is significant while controlling for influence of Muscle
anova(m_muscEmos, btt = 3:6) 


# Muscles & Stimuli
# -----------------

# fit model
m_muscStim <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) + factor(Stimuli), data = dat_emp, method = "ML")
m_muscStim

# tests whether Muscle is significant while controlling for influence of Stimuli
anova(m_muscStim, btt = 2) 

# tests whether Stimuli is significant while controlling for influence of Muscle
anova(m_muscStim, btt = 3) 


# Muscles & Measure type
# ----------------------

# fit model
m_muscMeasType <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) + factor(Measure_type), data = dat_emp, method = "ML")
m_muscMeasType

# tests whether Muscle is significant while controlling for influence of Measure Type
anova(m_muscMeasType, btt = 2:4) 

# tests whether Measure Type is significant while controlling for influence of Muscle
anova(m_muscMeasType, btt = 5:25) 


# Muscles & Measure trait
# -----------------------

# fit model
m_muscMeasTrait <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) + factor(Measure_type), data = dat_emp_measure_trait, method = "ML")
m_muscMeasTrait

# tests whether Muscle is significant while controlling for influence of Measure Type
anova(m_muscMeasTrait, btt = 2:3) 

# tests whether Measure Type is significant while controlling for influence of Muscle
anova(m_muscMeasTrait, btt = 4:12) 


# Emotion & Stimuli
# -----------------

# fit model
m_emoStim <- rma(yi = r, vi = var_r, mods = ~ factor(Emotion) + factor(Stimuli), data = dat_emp_emo_wOutNeg, method = "ML")
m_emoStim

# tests whether Emotion is significant while controlling for influence of Stimuli
anova(m_emoStim, btt = 2:6) 

# tests whether Stimuli is significant while controlling for influence of Emotion
anova(m_emoStim, btt = 7) 


# Emotion - neg & Stimuli
# -----------------------

# fit model
m_emoNegStim <- rma(yi = r, vi = var_r, mods = ~ factor(Emotion) + factor(Stimuli), data = dat_emp_emo_neg, method = "ML")
m_emoNegStim

# tests whether Emotion valence is significant while controlling for influence of Stimuli
anova(m_emoNegStim, btt = 2:5) 

# tests whether Stimuli is significant while controlling for influence of Emotion valence
anova(m_emoNegStim, btt = 6) 


# Muscles & Emp vs. rec
# ---------------------

# fit model
m_muscEmpRec <- rma(yi = r, vi = var_r, mods = ~ factor(Muscle) + factor(Measure), data = dat_empall, method = "ML")
m_muscEmpRec

# tests whether Muscle is significant while controlling for influence of Emotion
anova(m_muscEmpRec, btt = 2:5) 

# tests whether Emotion is significant while controlling for influence of Muscle
anova(m_muscEmpRec, btt = 6) 


# Measure type - trait & Stimuli
# ------------------------------

# fit model
m_traitStim <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type) + factor(Stimuli), data = dat_emp_measure_trait, method = "ML")
m_traitStim

# tests whether Muscle is significant while controlling for influence of Stimuli
anova(m_traitStim, btt = 2:9) 

# tests whether Stimuli is significant while controlling for influence of Muscle
anova(m_traitStim, btt = 10) 


# Measure type - trait & stimulus exposure
# ----------------------------------------

# fit model
m_traitExposure <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type) + factor(Stimulus_exposure), data = dat_emp_exposure, method = "ML")
m_traitExposure

# tests whether Muscle is significant while controlling for influence of Stimuli
anova(m_traitExposure, btt = 2:11) 

# tests whether Stimuli is significant while controlling for influence of Muscle
anova(m_traitExposure, btt = 12) 


# Measure type - trait & Explicit
# -------------------------------

# fit model
m_traitExplicit <- rma(yi = r, vi = var_r, mods = ~ factor(Measure_type) + factor(Explicit), data = dat_emp_measure_trait, method = "ML")
m_traitExplicit

# tests whether Muscle is significant while controlling for influence of Stimuli
anova(m_traitExplicit, btt = 2:9) 

# tests whether Stimuli is significant while controlling for influence of Muscle
anova(m_traitExplicit, btt = 10) 


# -----------------------
# Est ES for CS-ang x Emp
# -----------------------


# filter emp data
# ---------------

# calculate number of studies with specific values
dat_emp %>% filter(Muscle == "CS") %>% distinct(id)

# select specific rows
dat_CSang_emp <- filter(dat_emp, Muscle == "CS", Emotion == "ang")


# aggregate ES for FM x Emp
# -------------------------

# select specific columns
dat_CSang_emp_agg <- select(dat_CSang_emp, id, r, n)

# compute aggregated ES for each study
agg_CSang_emp <- agg(id, r, n, cor = .50, mod = NULL, data = dat_CSang_emp_agg)

# compute variance of correlation coef (r) and add variance column to data results
var_r_funcAggCSAngEmp <- var_r(agg_CSang_emp$r, agg_CSang_emp$n)
agg_CSang_emp$var_r <- var_r_funcAggCSAngEmp

# select columns Study and Year from original data
Study_Year_CSangEmp_all <- select(dat_CSang_emp, Study, Year)

# remove duplicate rows 
Study_Year_CSang_emp <- distinct(Study_Year_CSangEmp_all)

# merge columns Study and Year with aggregated data results
agg_CSangEmp_Results <- bind_cols(Study_Year_CSang_emp, agg_CSang_emp)


# Est ES
# ------

# Random effects meta-regression

# compute est. summary effect
m0agg_CSangEmp <- mareg(r ~ 1, var = var_r, method = "REML", data = agg_CSang_emp)
summary(m0agg_CSangEmp)

# heterogeneity
het_m0agg_CSangEmp <- confint(m0agg_CSangEmp, digist = 2)
het_m0agg_CSangEmp


##############################################################################
# aggregate ES, est ES, heterogeneity, publication bias and plots for FM x Rec
##############################################################################


# data as dat1


# ---------------
# filter rec data
# ---------------

# select specific rows
dat_rec <- filter(dat1, Measure == "Rec")


# -------------------------
# aggregate ES for FM x Rec
# -------------------------

# select specific columns
dat_rec_agg <- select(dat_rec, id, r, n)

# compute aggregated ES for each study
agg_rec <- agg(id, r, n, cor = .50, mod = NULL, data = dat_rec_agg)

# compute variance of correlation coef (r) and add variance column to data results
var_r_funcAggRec <- var_r(agg_rec$r, agg_rec$n)
agg_rec$var_r <- var_r_funcAggRec

# bind columns Study and Year to data results
Study_Year_rec_all <- select(dat_rec, Study, Year)
Study_Year_rec <- distinct(Study_Year_rec_all)
agg_rec_Results <- bind_cols(Study_Year_rec, agg_rec)


# -------------------
# Est ES for FM x Rec
# -------------------

# Random effects meta-regression

# compute est. summary effect
m0agg_rec <- mareg(r ~ 1, var = var_r, method = "REML", data = agg_rec)
summary(m0agg_rec)


# ------------------------------------
# Calculate heterogeneity for FM x Rec
# ------------------------------------

# Calculate I2
het_m0agg_rec <- confint(m0agg_rec, digist = 2)
het_m0agg_rec


# ------------------
# plots for FM x Rec
# ------------------

# forest plot for agg

# select specific columns
agg_rec_forest <- select(agg_rec_Results, Study, Year, r, n, var_r)

# plot forest plot
forestPlot_rec_data <- rma(yi = r, vi = var_r, data = agg_rec_forest)
forestPlot_rec <- forest(forestPlot_rec_data, slab = paste(agg_rec_forest$Study, agg_rec_forest$Year, sep = ", "), xlim = c(-2.25, 2.25), digits = c(2, 2), cex = 1.0) 

# add bold titles
par(cex = 1.3, font = 2) 
text(0, 11, "Forest plot of aggregated effect sizes per study", pos = 3)
par(cex = 1.3, font = 1) 
text(-2.25, 10.5, "Author(s) & Year", pos = 4)
text(2.25, 10.5, "Observed r [95% CI]", pos = 2)


# plot Baujat plot

# plot from agg ES
agg_rec_baujat <- rma(yi = r, vi = var_r, data = agg_rec)
par(cex = 1.3, font = 1)
baujat(agg_rec_baujat, xlim=c(0, 2), ylim = c(0, 0.6), main = "Baujat plot of aggregated effect sizes per study")


# plot Q-Q plot

# id outliers
par(cex = 1.3, font = 1)
qqnorm(agg_rec_baujat, label = "all")
qqnorm(agg_rec_baujat, label = "none")


# -----------------------------
# publication bias for FM x Rec
# -----------------------------

# plot funnel plot
par(cex = 1.3, font = 1)
funnel(m0agg_rec, main = "Funnel plot of aggregated effect sizes per study")

# test for asymmetry - rank test
ranktest(m0agg_rec)

# test for asymmetry - regression test (Egger's test) - rma for both mixed & random effects models - see metafor manual
agg_rec_egger <- rma( yi = r, vi = var_r, data = agg_rec)
regtest.rma(agg_rec_egger)


#-------------------------------------
# Trim and fill and run analysis again
# ------------------------------------

# trim and fill to remove pub bias
m_tf_agg_rec <- rma(yi = r, vi = var_r, data = agg_rec, method = "FE")
tf_agg_rec <- trimfill(m_tf_agg_rec)
tf_agg_rec

# plot new funnel plot
funnel(tf_agg_rec, main = "Funnel plot of aggregated effect sizes per study")

# test for assymmetry
regtest.rma(tf_agg_rec)
